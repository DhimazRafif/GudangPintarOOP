/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gudangpintar;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Lenovo
 */
public class PagePegawai extends javax.swing.JFrame {

    
    private Connection conn;
    private int selectedIdToEdit = -1;
    private ArrayList<Barang> listBarang;
    
    private void valueComboBox(){
        try{
        String query = "SELECT kategori FROM kategori_barang";
        
        PreparedStatement ps = conn.prepareStatement(query);
        ResultSet rs = ps.executeQuery();
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        
        while(rs.next()){
            String kategori = rs.getString("kategori");
            model.addElement(kategori);
                      
        }
        cbKategori.setModel(model);
            
        }catch(Exception e){
            e.printStackTrace();
        }
        
        
    }
    
    private void tambahData(String namaBarang, String kategori, int jumlah, int harga){
        if (conn != null) {
            try {
                String query = "insert into barang(namabarang, kategori,jumlah, harga)Values(?,?,?,?)";
                PreparedStatement ps = conn.prepareStatement(query);
                
                ps.setString(1, namaBarang);
                ps.setString(2, kategori);
                ps.setInt(3, jumlah);
                ps.setInt(4, harga);
                int hasil = ps.executeUpdate();
                if (hasil > 0) {
                    JOptionPane.showMessageDialog(this, "Input berhasil");
                    loadBarang();
                    refreshTable();
                }
            } catch (SQLException ex) {
                Logger.getLogger(PagePegawai.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void loadBarang() {
        if (conn != null) {
            listBarang = new ArrayList<>();
            String query = "SELECT * FROM barang; ";
            try {
                PreparedStatement ps = conn.prepareStatement(query);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    
                    String id = rs.getString("idbarang");
                    String nama = rs.getString("namabarang");
                    String kategori = rs.getString("kategori");
                    int jumlah = rs.getInt("jumlah");
                    int harga = rs.getInt("harga");
                    
                    Barang barang = new Barang(id,nama, kategori, jumlah, harga);
                    listBarang.add(barang);
                }
                rs.close();
                ps.close();
            } catch (SQLException ex) {
                Logger.getLogger(PagePegawai.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private DefaultTableModel tableModel = new DefaultTableModel(
            new Object[][]{},
            new String[]{
                "Id","Nama", "Kategori", "Jumlah","Harga"
            }
    );
    
    
    private TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<>(tableModel);
    /**
     * Creates new form PagePegawai
     */
    public PagePegawai() {
        initComponents();
        this.setLocationRelativeTo(null);
        jtDataBarang.setModel(tableModel);
        jtDataBarang.setRowSorter(rowSorter);
        conn = Koneksi.bukaKoneksi();
        valueComboBox();       
        loadBarang();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnTambahBarang = new javax.swing.JButton();
        btnHapusBarang = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfNama = new javax.swing.JTextField();
        cbKategori = new javax.swing.JComboBox<>();
        tfHarga = new javax.swing.JTextField();
        tfJumlah = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDataBarang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBackground(new java.awt.Color(0, 255, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Inventory");

        btnTambahBarang.setText("Tambah");
        btnTambahBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahBarangActionPerformed(evt);
            }
        });

        btnHapusBarang.setText("Hapus");
        btnHapusBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusBarangActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel2.setText("Nama");

        jLabel3.setText("Kategori");

        jLabel4.setText("Jumlah");

        jLabel5.setText("Harga");

        tfNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNamaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(cbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(btnTambahBarang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addGap(58, 58, 58)
                        .addComponent(btnHapusBarang)))
                .addGap(149, 149, 149))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tfJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tfHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambahBarang)
                    .addComponent(btnHapusBarang)
                    .addComponent(btnEdit))
                .addGap(17, 17, 17))
        );

        jtDataBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nama", "Kategori", "Jumlah", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDataBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDataBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDataBarang);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNamaActionPerformed

    private void btnHapusBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusBarangActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) jtDataBarang.getModel();
        
        if(jtDataBarang.getSelectedRowCount() ==1 ){
            int response = JOptionPane.showConfirmDialog(null, "Apakah anda ingin menghapus baris pilihan anda?",
                    "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            
            if(response == JOptionPane.YES_OPTION){
                int row = jtDataBarang.getSelectedRow();
                String cell = jtDataBarang.getModel().getValueAt(row,1).toString();
                String query = "DELETE FROM barang WHERE NamaBarang =" +"'" +cell+"'";
                
                try{
                    PreparedStatement ps = conn.prepareStatement(query);
                    ps.executeUpdate(); 
                    
                    JOptionPane.showMessageDialog(null,"Berhasil dihapus!");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
                model.removeRow(jtDataBarang.getSelectedRow());
             
            }else if(response == JOptionPane.NO_OPTION){
                
            }
        }else{
            JOptionPane.showMessageDialog(null, "Pilih baris yang ingin dihapus");
        }
        tfNama.setText("");
        tfHarga.setText("");
        tfJumlah.setText("");
        cbKategori.setSelectedItem(0);
    }//GEN-LAST:event_btnHapusBarangActionPerformed

    private void btnTambahBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahBarangActionPerformed
        String namaBarang = tfNama.getText();
        String kategori = cbKategori.getSelectedItem().toString();
        String strJumlah = tfJumlah.getText();
        String strHarga = tfHarga.getText();
        
        //validasi
        if (namaBarang.isBlank()||strJumlah.isBlank()|| strHarga.isBlank()) {
            JOptionPane.showMessageDialog(this, "Masukkan semua data dengan benar");
            return;
        }
                
        int jumlah = Integer.parseInt(strJumlah);
        int harga = Integer.parseInt(strHarga);
        
        if(jumlah<0){
            JOptionPane.showMessageDialog(this,"jumlah tidak bisa negatif");
            return;
        }
        if(harga<0){
            JOptionPane.showMessageDialog(this, "harga tidak bisa negatif");
            return;
        }
        tambahData(namaBarang,kategori,jumlah,harga);
        loadBarang();
        refreshTable();

        kosongkanForm();
    }//GEN-LAST:event_btnTambahBarangActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String nama = tfNama.getText();;
        String kategori = cbKategori.getSelectedItem().toString();
        String strharga = tfHarga.getText();
        String strjumlah = tfJumlah.getText();
        
        if(nama.isEmpty()&& strjumlah.isEmpty() && strharga.isEmpty()){
            JOptionPane.showMessageDialog(null, "Tolong pilih baris terlebih dahulu");
        }else if(nama.isEmpty()||strjumlah.isEmpty() || strharga.isEmpty()){
            JOptionPane.showMessageDialog(null, "Tolong masukkan semua data dengan benar");
            return;
        }else{    

        if(conn!=null){
        try{
            int jumlah = Integer.parseInt(tfJumlah.getText());
            int harga = Integer.parseInt(tfHarga.getText());
            
            if(jumlah<0){
                JOptionPane.showMessageDialog(this, "Jumlah tidak bisa negatif");
                return;
            }
            
            if(harga<0){
                JOptionPane.showMessageDialog(this,"Harga tidak bisa negatif");
                return;
            }
            
            String query = "UPDATE barang SET Namabarang = ? , Kategori = ?, Jumlah = ?, harga = ? WHERE idbarang=?";
            PreparedStatement ps = conn.prepareStatement(query);
            
            ps.setString(1, nama);
            ps.setString(2,kategori);
            ps.setInt(3,jumlah);
            ps.setInt(4,harga);
            ps.setInt(5, selectedIdToEdit);
           
            int barisDiubah = ps.executeUpdate();
            
            if(barisDiubah > 0){
                JOptionPane.showMessageDialog(this, "Data berhasil diubah", "Berhasil", JOptionPane.INFORMATION_MESSAGE);
                loadBarang();
                refreshTable();
                kosongkanForm();
            }else{
                JOptionPane.showMessageDialog(this,"Data tidak berhasil diubah");
            }
            ps.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error saat memperbarui data");
            e.printStackTrace();
        }
        
        }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void jtDataBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDataBarangMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel)jtDataBarang.getModel();
        
        int selectedRow = jtDataBarang.getSelectedRow();
        if(selectedRow != -1){
        
        selectedIdToEdit = Integer.parseInt(jtDataBarang.getValueAt(selectedRow,0).toString());
        
        String tblName = model.getValueAt(jtDataBarang.getSelectedRow(), 1).toString();
        String tblKategori = model.getValueAt(jtDataBarang.getSelectedRow(), 2).toString();
        String tblJumlah = model.getValueAt(jtDataBarang.getSelectedRow(), 3).toString();
        String tblHarga = model.getValueAt(jtDataBarang.getSelectedRow(), 4).toString();
        tfNama.setText(tblName);
        tfJumlah.setText(tblJumlah);
        tfHarga.setText(tblHarga);
        if(tblKategori.equalsIgnoreCase("Makanan dan minuman")){
            cbKategori.setSelectedIndex(0);
        }else if(tblKategori.equalsIgnoreCase("ATK")){
            cbKategori.setSelectedIndex(1);
        }else{
            JOptionPane.showMessageDialog(null, "Tidak ada kategori");
        }
        }
        
        
        
        
    }//GEN-LAST:event_jtDataBarangMouseClicked

    private void refreshTable() {
        tableModel.setRowCount(0);

        for (Barang barang : listBarang) {
            String[] data = {
                barang.getIdBarang(),
                barang.getNamaBarang(),
                barang.getKategori(),
                Integer.toString(barang.getJumlah()),
                Integer.toString(barang.getHarga())
            };

            tableModel.addRow(data);
        }
    }
    
    private void kosongkanForm() {
        tfNama.setText("");
        tfJumlah.setText("");
        tfHarga.setText("");
        cbKategori.setSelectedIndex(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PagePegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PagePegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PagePegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PagePegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PagePegawai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapusBarang;
    private javax.swing.JButton btnTambahBarang;
    private javax.swing.JComboBox<String> cbKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtDataBarang;
    private javax.swing.JTextField tfHarga;
    private javax.swing.JTextField tfJumlah;
    private javax.swing.JTextField tfNama;
    // End of variables declaration//GEN-END:variables
}
