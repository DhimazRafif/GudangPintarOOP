/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gudangpintar;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Lenovo
 */
public class PageAkun extends javax.swing.JFrame {

    private Connection conn;
    private int selectedIdToEdit = -1;
    private ArrayList<Akun> listAkun;
    
    private void tambahData(String username, String password, String role){
        if (conn != null) {
            try {
                String query = "insert into akun(username, password, role)Values(?,?,?)";
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setString(1, username);
                ps.setString(2, password);
                ps.setString(3, role);
                
                int hasil = ps.executeUpdate();
                if (hasil > 0) {
                    JOptionPane.showMessageDialog(this, "Input berhasil");
                    loadAkun();
                    refreshTable();
                }
            } catch (SQLException ex) {
                Logger.getLogger(PagePegawai.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void valueComboBox(){
        try{
        String query = "SELECT Role FROM role_pengguna";
        
        PreparedStatement ps = conn.prepareStatement(query);
        ResultSet rs = ps.executeQuery();
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        
        while(rs.next()){
            String role = rs.getString("Role");
            model.addElement(role);
                      
        }
        cbRole.setModel(model);
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    private void loadAkun(){
        if(conn!=null){
            listAkun = new ArrayList<>();
            String query = "SELECT * from akun" ;
            
            try{
                PreparedStatement ps = conn.prepareStatement(query);
                ResultSet rs = ps.executeQuery();
                
                while(rs.next()){
                    String id = rs.getString("idakun");
                    String username = rs.getString("username");
                    String password = rs.getString("password");
                    String role = rs.getString("role");
                    Akun akun = new Akun(id,username, password, role);
                    
                    listAkun.add(akun);
                    
                }
                rs.close();
                ps.close();
            }catch(SQLException ex){
                Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private DefaultTableModel tableModel = new DefaultTableModel(
            new Object[][]{},
            new String[]{
                "Id","Username", "Password","Role"
            }
    );
    
     private TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<>(tableModel);
    
    /**
     * Creates new form PageBarang
     */
    public PageAkun() {
        initComponents();
        this.setLocationRelativeTo(null);
        jtDataAkun.setModel(tableModel);
        jtDataAkun.setRowSorter(rowSorter);
        conn = Koneksi.bukaKoneksi();
        
        valueComboBox();
        loadAkun();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnPageBarang = new javax.swing.JButton();
        btnPageAkun = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnTambah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        cbRole = new javax.swing.JComboBox<>();
        btnEdit = new javax.swing.JButton();
        pfPassword = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDataAkun = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnPageBarang.setText("Barang");
        btnPageBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPageBarangActionPerformed(evt);
            }
        });

        btnPageAkun.setBackground(new java.awt.Color(51, 255, 0));
        btnPageAkun.setText("Akun");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(btnPageBarang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPageAkun)
                .addGap(59, 59, 59))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPageBarang)
                    .addComponent(btnPageAkun))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 255, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Akun");

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        jLabel4.setText("Role");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(btnTambah)
                                .addGap(113, 113, 113))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(69, 69, 69)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnHapus))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfUsername)
                                    .addComponent(cbRole, 0, 145, Short.MAX_VALUE)
                                    .addComponent(pfPassword))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(100, 100, 100))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnEdit)
                    .addComponent(btnHapus))
                .addGap(18, 57, Short.MAX_VALUE))
        );

        jtDataAkun.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Username", "Password", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDataAkun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDataAkunMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDataAkun);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTable() {
        tableModel.setRowCount(0);

        for (Akun akun : listAkun) {
            String[] data = {
                akun.getIdAkun(),
                akun.getUsername(),
                akun.getPassword(),
               akun.getRole(),
            };

            tableModel.addRow(data);
        }
    }
    
    private void kosongkanForm(){
        tfUsername.setText("");
        pfPassword.setText("");
        cbRole.setSelectedItem(0);
    }
    
    private void btnPageBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPageBarangActionPerformed
        MainPage mainpage = new MainPage();
        
        mainpage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnPageBarangActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        String username = tfUsername.getText();
        String password = pfPassword.getText();
        String role = cbRole.getSelectedItem().toString();
        
        
        if(username.isBlank()|| password.isBlank()){
            JOptionPane.showMessageDialog(this, "Tidak boleh ada data yang kosong");
            return;
        }
        
        
        tambahData(username, password, role);
        loadAkun();
        refreshTable();

        kosongkanForm();
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) jtDataAkun.getModel();
        
        if(jtDataAkun.getSelectedRowCount() ==1 ){
            int response = JOptionPane.showConfirmDialog(null, "Apakah anda ingin menghapus baris pilihan anda?",
                    "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            
            if(response == JOptionPane.YES_OPTION){
                int row = jtDataAkun.getSelectedRow();
                String cell = jtDataAkun.getModel().getValueAt(row,1).toString();
                String query = "DELETE FROM akun WHERE Username =" +"'" +cell+"'";
                
                try{
                    PreparedStatement ps = conn.prepareStatement(query);
                    ps.executeUpdate(); 
                    
                    JOptionPane.showMessageDialog(null,"Berhasil dihapus!");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
                model.removeRow(jtDataAkun.getSelectedRow());
             
            }else if(response == JOptionPane.NO_OPTION){
                
            }
        }else{
            JOptionPane.showMessageDialog(null, "Pilih baris yang ingin dihapus");
        }
        kosongkanForm();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void jtDataAkunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDataAkunMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jtDataAkun.getModel();
        
        int selectedRow = jtDataAkun.getSelectedRow();
        
        if(selectedRow !=-1){
            selectedIdToEdit = Integer.parseInt(jtDataAkun.getValueAt(selectedRow, 0).toString());
            
        String tblUsername = model.getValueAt(jtDataAkun.getSelectedRow(), 1).toString();
        String tblPassword = model.getValueAt(jtDataAkun.getSelectedRow(), 2).toString();
        String tblKategori = model.getValueAt(jtDataAkun.getSelectedRow(), 3).toString();
        
        tfUsername.setText(tblUsername);
        pfPassword.setText(tblPassword);
        if(tblKategori.equalsIgnoreCase("Admin")){
            cbRole.setSelectedIndex(0);
        }else if(tblKategori.equalsIgnoreCase("Pegawai")){
            cbRole.setSelectedIndex(1);
        }else{
            JOptionPane.showMessageDialog(this, "Role tidak ada");
        }
        
        }
    }//GEN-LAST:event_jtDataAkunMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        String username = tfUsername.getText();
        String password = pfPassword.getText();
        String role = cbRole.getSelectedItem().toString();
        
        if(username.isEmpty()&& password.isEmpty()){
            JOptionPane.showMessageDialog(this, "Tolong pilih baris terlebih dahulu");
        }else if(username.isEmpty()|| password.isEmpty()){
            JOptionPane.showMessageDialog(this, "Tolong masukan data dengan benar");
        }else{
        
        if(conn!=null){
            try{
                String query ="UPDATE akun SET Username=?, Password=?, Role=? WHERE idakun =?";
                PreparedStatement ps = conn.prepareStatement(query);
                
                ps.setString(1,username);
                ps.setString(2,password);
                ps.setString(3,role);
                ps.setInt(4,selectedIdToEdit);
                
                int barisDiubah = ps.executeUpdate();
                if(barisDiubah>0){
                    JOptionPane.showMessageDialog(this,"Data berhasil diubah","Berhasil",JOptionPane.INFORMATION_MESSAGE);
                    loadAkun();
                    refreshTable();
                    kosongkanForm();
                }else{
                    JOptionPane.showMessageDialog(this,"Gagal mengubah data");
                }
                ps.close();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(this, "Error saat memperbarui data");
                e.printStackTrace();
            }
            
        }
        } 
    }//GEN-LAST:event_btnEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageAkun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageAkun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageAkun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageAkun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageAkun().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnPageAkun;
    private javax.swing.JButton btnPageBarang;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cbRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtDataAkun;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables
}
